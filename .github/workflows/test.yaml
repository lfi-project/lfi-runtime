on: [push, pull_request]
name: Build
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.19.x]
        os: [ubuntu-22.04, ubuntu-22.04-arm]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ matrix.go-version }}
    - uses: actions/checkout@v3

    - name: Install Dependencies
      run: sudo apt update && sudo apt install -y gcc-aarch64-linux-gnu gcc-x86-64-linux-gnu clang lld meson ninja-build

    - name: Install LFI x86-64 Compiler
      if: matrix.os == 'ubuntu-22.04'
      run: wget -q https://github.com/zyedidia/lfi/releases/download/v0.7/x86_64-lfi-clang.tar.gz && tar -xf x86_64-lfi-clang.tar.gz && echo "$PWD/x86_64-lfi-clang/lfi-bin" >> $GITHUB_PATH

    - name: Install LFI AArch64 Compiler
      if: matrix.os == 'ubuntu-22.04-arm'
      run: wget -q https://github.com/zyedidia/lfi/releases/download/v0.7/aarch64-lfi-clang.tar.gz && tar -xf aarch64-lfi-clang.tar.gz && echo "$PWD/aarch64-lfi-clang/lfi-bin" >> $GITHUB_PATH

    - name: Build and Test with sanitizers
      run: |
        ASAN_OPTIONS=detect_leaks=0 meson build-san -Db_sanitize=address,undefined -Dbuildtype=debugoptimized && ninja -C build-san test
